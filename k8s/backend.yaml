apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: forms
type: Opaque
stringData:
  SECRET_KEY: supersecret
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: forms
data:
  ALGORITHM: HS256
  ACCESS_TOKEN_EXPIRE_MINUTES: "2880"
  DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres.forms.svc.cluster.local:5432/forms
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: forms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: your-dockerhub-username/forms-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: SECRET_KEY
            - name: ALGORITHM
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: ALGORITHM
            - name: ACCESS_TOKEN_EXPIRE_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: ACCESS_TOKEN_EXPIRE_MINUTES
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DATABASE_URL
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: forms
spec:
  selector:
    app: backend
  ports:
    - name: http
      port: 8000
      targetPort: 8000
